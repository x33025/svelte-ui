/* Stack Component */
.stack {
  display: flex;
  gap: var(--gap, 1em);
  flex-direction: var(--direction, column);
  justify-content: var(--justify, flex-start);
  align-items: var(--align, flex-start);
}

/* Stack Component */
.stack {
  display: flex;
  gap: var(--gap, 1em);
  flex-direction: var(--direction, column);
  justify-content: var(--justify, flex-start);
  align-items: var(--align, flex-start);
}

/* Utility Classes for Numeric Coordinates */
.stack.\30-0 {
  --justify: flex-start;
  --align: flex-start;
}

.stack.\30-1 {
  --justify: flex-start;
  --align: center;
}

.stack.\30-2 {
  --justify: flex-start;
  --align: flex-end;
}

.stack.\31-0 {
  --justify: center;
  --align: flex-start;
}

.stack.\31-1 {
  --justify: center;
  --align: center;
}

.stack.\31-2 {
  --justify: center;
  --align: flex-end;
}

.stack.\32-0 {
  --justify: flex-end;
  --align: flex-start;
}

.stack.\32-1 {
  --justify: flex-end;
  --align: center;
}

.stack.\32-2 {
  --justify: flex-end;
  --align: flex-end;
}


.full-width {
  width: 100%;
}

.full-height {
  height: 100%;
}


.expand {
  flex: 1;
  width: auto;
  height: auto;
}

.no-gap {
  gap: 0;
}



.grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr); 
  gap: var(--gap, 1em);
}

@media (max-width: 600px) {
  .responsive {
    flex-direction: column !important;
  }
}

/* More sophisticated z-stack using CSS Grid */
.z-stack {
  display: grid;
  grid-template-areas: "content";
  position: relative;
}

.z-stack > * {
  grid-area: content;
}

/* Utility Classes */


.page {
  height: 100svh !important;
  display: flex;
  flex-direction: column;
  flex: 1;
  overflow: hidden;
}





/* Improved Scrollable Component */
.scrollable {
  overflow-y: auto;
  overflow-x: hidden;
}

.stack[style*="--direction: row"] .scrollable {
  overflow-y: hidden;
  overflow-x: auto;
}

/* Spacer Utility */
.spacer {
  flex-grow: 1;
}

.divider {
  width: 100%;
  height: 1px;
  background-color: var(--gray-2);
}